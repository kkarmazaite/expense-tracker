// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  email        String  @unique
  name         String
  password     String
  profileImage String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  refreshToken RefreshToken[]
  accounts     Account[]
}

model RefreshToken {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  token String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
}

model Account {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  categories Category[]
}

enum TRANSACTION_TYPES {
  income
  expense
}

model Icon {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categories Category[]
}

model Color {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  hexCode String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categories Category[]
}

model Category {
  id   String            @id @default(auto()) @map("_id") @db.ObjectId
  type TRANSACTION_TYPES
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accountId String  @db.ObjectId
  account   Account @relation(fields: [accountId], references: [id])

  iconId String? @db.ObjectId
  icon   Icon?   @relation(fields: [iconId], references: [id])

  colorId String? @db.ObjectId
  color   Color?  @relation(fields: [colorId], references: [id])

  transactions Transaction[]
}

model Transaction {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  date        DateTime @default(now()) @db.Date
  amount      Float
  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categoryId String   @db.ObjectId
  category   Category @relation(fields: [categoryId], references: [id])
}
